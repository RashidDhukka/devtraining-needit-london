<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>valid When Needed Date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
   var gdwhenNeeded = new GlideDateTime(current.u_when_needed);
   var gdwToday = new GlideDateTime();
   //gs.addInfoMessage(gdwToday.getDate());
   //gs.addInfoMessage(gdwhenNeeded.getDate());
	
	var gdWn = gdwhenNeeded.getDate();
	var gdTo = gdwToday.getDate();	
	
	//var gdt = new GlideDateTime("2014-08-31 08:00:00");
	//gt = gdwToday.getTime();
	//gs.info(gt.getByFormat('hh:mm:ss'));
	//gs.addInfoMessage(gt.getByFormat('hh:mm:ss'));
	
    if (gdwhenNeeded.before(gdwToday)){
	    gs.addErrorMessage("When Needed should be greater then Today's date.");
		current.u_when_needed.setError("When Needed should be greater then Today's date.");
		gs.error("Wehn needed should be greater " , gdwhenNeeded);
		current.setAbortAction(true);
		return false;
	}
	
	gs.info("When Date " + gdWn.getByFormat("dd-MM-YYYY") + " ToDate " + gdTo.getByFormat("dd-MM-YYYY"));
	
    
	if (gdWn.compareTo(gdTo) == 0){
	  current.u_when_needed.setError("When Needed date cann't be Today's Date.");			
	  current.setAbortAction(true);
	  return false;
	}
	
	//if (current.u_when_needed)
	
	// Add your code here

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-17 02:42:17</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1fbea8544f213300e41aa88ca310c7d3</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>valid When Needed Date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_1fbea8544f213300e41aa88ca310c7d3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-20 03:14:19</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1fbea8544f213300e41aa88ca310c7d3"/>
</record_update>
